heater.df    =  df2[,c("dateTime", "heater_conditioner")]
submeter.df  =  df2[,c("dateTime", "total_submeter")]
total.df     =  df2[,c("dateTime", "total_consump")]
rest.df      =  df2[,c("dateTime", "total_rest")]
kitchen.ts   =  xts(kitchen.df$kitchen, kitchen.df$dateTime)
laundry.ts   =  xts(laundry.df$laundry_room, laundry.df$dateTime)
heater.ts    =  xts(heater.df$heater_conditioner, heater.df$dateTime)
submeter.ts  =  xts(submeter.df$total_submeter, submeter.df$dateTime)
total.ts     =  xts(total.df$total_consump, total.df$dateTime)
rest.ts      =  xts(rest.df$total_rest, rest.df$dateTime)
rm(kitchen.df, laundry.df, heater.df, submeter.df, total.df, rest.df)
tzone(kitchen.ts)  <- Sys.timezone()
tzone(laundry.ts)  <- Sys.timezone()
tzone(heater.ts)   <- Sys.timezone()
tzone(submeter.ts) <- Sys.timezone()
tzone(total.ts)    <- Sys.timezone()
tzone(rest.ts)     <- Sys.timezone()
#### Writing .csv ####
# write.csv(x = df2,
#           file = "C:/Users/David/Google Drive/energy_consumption.csv",
#           na = "NA",
#           row.names = F
#           )
#### something ####
install.packages("imputeTS")
library(imputeTS)
#### Fixing Missing values ####
head(tsAirgap)
#### Fixing Missing values ####
head(tsAirgap)[1:50]
#### Fixing Missing values ####
tsAirgap
#### Fixing Missing values ####
class(tsAirgap)
#### Fixing Missing values ####
plot(tsAirgap, main="graph")
statsNA(tsAirgap)
par(mfrow=c(2,2))
mean((na.mean(tsAirgap, option = "mean") - AirPassengers)^2)
plot(na.mean(tsAirgap, option = "mean") - AirPassengers,
ylim = c(-mean(AirPassengers), mean(AirPassengers)),
ylab = "Difference",
main = "Mean")
mean((na.mean(tsAirgap, option = "mean") - AirPassengers)^2)
plot(na.mean(tsAirgap, option = "median") - AirPassengers,
ylim = c(-mean(AirPassengers), mean(AirPassengers)),
ylab = "Difference",
main = "Median")
mean((na.mean(tsAirgap, option = "median") - AirPassengers)^2)
par(mfrow=c(1,2))
plot(na.mean(tsAirgap, option = "mean") - AirPassengers,
ylim = c(-mean(AirPassengers), mean(AirPassengers)),
ylab = "Difference",
main = "Mean")
mean((na.mean(tsAirgap, option = "mean") - AirPassengers)^2)
plot(na.mean(tsAirgap, option = "median") - AirPassengers,
ylim = c(-mean(AirPassengers), mean(AirPassengers)),
ylab = "Difference",
main = "Median")
mean((na.mean(tsAirgap, option = "median") - AirPassengers)^2)
?na.mean
AirPassengers
tsAirgap
AirPassengers$Jan
class(AirPassengers)
AirPassengers[index(AirPassengers) == 1955]
AirPassengers[index(AirPassengers) == 1955,]
AirPassengers[,index(AirPassengers) == 1955]
par(mfrow=c(2,2))
plot(na.mean(tsAirgap, option = "mean") - AirPassengers,
ylim = c(-mean(AirPassengers), mean(AirPassengers)),
ylab = "Difference",
main = "Mean")
mean((na.mean(tsAirgap, option = "mean") - AirPassengers)^2)
plot(na.mean(tsAirgap, option = "median") - AirPassengers,
ylim = c(-mean(AirPassengers), mean(AirPassengers)),
ylab = "Difference",
main = "Median")
mean((na.mean(tsAirgap, option = "median") - AirPassengers)^2)
plot(na.mean(tsAirgap, option = "mode") - AirPassengers, ylim = c(-mean(AirPassengers), mean(AirPassengers)), ylab = "Difference", main = "Mode")
mean((na.mean(tsAirgap, option = "mode") - AirPassengers)^2)
plot(na.random(tsAirgap) - AirPassengers, ylim = c(-mean(AirPassengers), mean(AirPassengers)), ylab = "Difference", main = "Random")
#### Fixing Missing values ####
plot(tsAirgap, main="graph")
install.packages("plotly")
library(plotly)
install.packages("gapminder")
library("gapminder", lib.loc="C:/R/library")
data(gapminder, package = "gapminder")
gg <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
ggplotly(gg)
rm(list = ls())
df = data("iris")
head(df)
rm(list = ls())
head(iris)
df = as.data.frame(iris)
str(iris)
rm(list = ls())
df = as.data.frame(iris)
df
df %>%
select(Species)
rm(list = ls())
library(dplyr)
df <- as.data.frame(iris)
df %>%
select(Species)
df %>%
select(Species) %>%
filter(1:5)
df %>%
select(Species) %>%
filter(Species[1:5])
df %>%
select(Species) %>%
filter(Species=="Virginica")
?filter
df %>%
select(Species) %>%
filter(df, Species=="Virginica")
df %>%
select(Species) %>%
filter(df, Species=="Virginica")
df %>%
select(Species) %>%
filter(df, Species=="virginica")
head(df)
df %>%
select(Species) %>%
filter(df, Species=="setosa")
df %>%
select(Species) %>%
filter(Species=="setosa")
df %>%
select(Species) %>%
filter(Species=="virginica")
df %>%
select(Species) %>%
filter(Species=="Virginica")
df %>%
select(Species) %>%
filter(Species=="virginica")
rm(list = ls())
library(dplyr)
df <- as.data.frame(iris)
df %>%
select(Species) %>%
filter(Species=="virginica")
df %>%
select(Species) %>%
filter(Species=="virginica") %>%
nrow(1:12)
df %>%
select(Species) %>%
filter(Species=="virginica") %>%
n(1:12)
df %>%
select(Species) %>%
filter(Species=="virginica") %>%
filter(df[1:20])
df %>%
select(Species) %>%
filter(Species=="virginica") %>%
filter(df[1:20],)
df %>%
select(Species) %>%
filter(Species=="virginica") %>%
filter(df[1:20,])
df %>%
select(Species) %>%
filter(Species=="virginica") %>%
head(df)
df %>%
select(Species) %>%
filter(Species=="virginica")
df %>%
group_by(Species)
df %>%
group_by(Species) %>%
summarize_all(mean)
df %>%
group_by(Species) %>%
summarise_all(mean)
df %>%
select(Species) %>%
filter(Species=="virginica") %>%
group_by()
df %>%
select(Species) %>%
filter(Species=="virginica") %>%
group_by() %>%
summarise_all(mean)
df %>%
select(Species) %>%
filter(Species=="virginica") %>%
group_by(Species) %>%
summarise_all(mean)
df %>%
filter(Species=="virginica") %>%
group_by(Species) %>%
summarise_all(mean)
df %>%
filter(Species=="virginica") %>%
#group_by(Species) %>%
summarise_all(mean)
df %>%
filter(Species=="virginica") %>%
group_by(Species) %>%
summarise_all(mean)
df %>%
group_by(Species) %>%
summarise_all(mean)
as.Date("1-1-2012")
as.Date("01-12-2012")
as.Date("2012-1-12")
x = as.Date("2012-1-12")
year(x)
x
year(x)
month(x)
day(x)
data.frame(date = seq.Date(from = "2010-1-1", to = "2012-12-31"))
data.frame(date = seq.Date(from = 2010-1-1, to = 2012-12-31))
?seq.Date
data.frame(date = seq.Date(from = 2010/1/1, to = 2012/12/31, by = "month"))
data.frame(date = seq.Date(from = "2010/1/1", to = "2012/12/31", by = "month"))
data.frame(date = seq.Date(from = as.Date("2010/1/1"), to = as.Date("2012/12/31"), by = "month"))
df2 = data.frame(date = seq.Date(from = as.Date("2010/1/1"), to = as.Date("2012/12/31"), by = "month"))
df2 = data.frame(date = seq.Date(from = as.Date("2010/1/1"), to = as.Date("2012/12/31"), by = "day"))
df2
df2 = data.frame(date = seq.Date(from = as.Date("2010/1/1"), to = as.Date("2012/12/31"), by = "day"),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2
head(df2)
df2 %>%
dplyr::group_by(year(date), month(date)) %>%
summarise_all(sum)
df2 = data.frame(per = seq.Date(from = as.Date("2010/1/1"), to = as.Date("2012/12/31"), by = "day"),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 %>%
dplyr::group_by(year(per), month(per)) %>%
summarise_all(sum)
str(df2)
df2 %>%
dplyr::group_by(year(per), month(per)) %>%
summarise(value = sum(value))
head(df2)
df2[1:30,]
df3 = df2[1:30,]
sum(df3$value)
df3 = df2[1:31,]
sum(df3$value)
df2 = data.frame(date = seq.Date(from = as.Date("2010/1/1"), to = as.Date("2012/12/31"), by = "day"),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 %>%
dplyr::group_by(year(date), month(date)) %>%
summarise(value = sum(value))
df2 = data.frame(date = seq.Date(from = as_Date("2010/1/1"), to = as_Date("2012/12/31"), by = "day"),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
library(lubridate)
df2 = data.frame(date = seq.Date(from = as_Date("2010/1/1"), to = as_Date("2012/12/31"), by = "day"),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 = data.frame(date = seq.Date(from = as_date(("2010/1/1"), to = as_date("2012/12/31"), by = "day"),
df2 = data.frame(date = seq.Date(from = as_date(("2010/1/1"), to = as_date("2012/12/31"), by = "day")),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
?as_date
df2 = data.frame(date = seq(from = ymd(("2010/1/1"), to = ymd("2012/12/31"), by = "day")),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 = data.frame(date = seq.Date(from = ymd(("2010/1/1"), to = ymd("2012/12/31"), by = "day")),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 = data.frame(date = seq.Date(from = as.Date(("2010/1/1"), to = as.Date("2012/12/31"), by = "day")),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 = data.frame(date = seq.Date(from = as_Date(("2010/1/1"), to = as_Date("2012/12/31"), by = "day")),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 = data.frame(date = seq.Date(from = as_Date("2010/1/1"), to = as_Date("2012/12/31"), by = "day"),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 = data.frame(date = seq.Date(from = as.Date("2010/1/1"), to = as.Date("2012/12/31"), by = "day"),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 %>%
dplyr::group_by(year(date), month(date)) %>%
summarise(value = sum(value))
df3 = df2[1:31,]
sum(df3$value)
df2 = data.frame(date = seq.Date(from = as.Date("2010/1/1"), to = as.Date("2012/12/31"), by = "day"),
value = sample(x = seq(20:100), size = nrow(df2), replace = T))
df2 %>%
dplyr::group_by(year(date), month(date)) %>%
summarise(value = sum(value))
head(df2)
df3 = df2[1:31,]
sum(df3$value)
rm(list = ls())
#### Loading data ####
library(lubridate)
library(dplyr)
library(ggplot2)
library(tidyr)
library(forecast)
library(zoo)
library(xts)
library(imputeTS)
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
head(df2)
#### Fixing Missing values ####
plot(tsAirgap, main="graph")
statsNA(tsAirgap)
total.df     =  df2[,c("dateTime", "total_consump")]
head(total.df)
total.ts     =  xts(total.df$total_consump, total.df$dateTime)
total.ts
rm(list = ls())
#### Loading data ####
library(lubridate)
library(dplyr)
library(ggplot2)
library(tidyr)
library(forecast)
library(zoo)
library(xts)
library(imputeTS)
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
head(df2)
#### Fixing Missing values ####
#### Creating time series ####
kitchen.df   =  df2[,c("dateTime", "kitchen")]
kitchen.df
kitchen.ts   =  xts(kitchen.df$kitchen, kitchen.df$dateTime)
head(kitchen.ts)
head(kitchen.df)
head(kitchen.ts)
statsNA(kitchen.ts)
rm(list = ls())
#### Loading data ####
library(lubridate)
library(dplyr)
library(ggplot2)
library(tidyr)
library(forecast)
library(zoo)
library(xts)
library(imputeTS)
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
head(df2)
#### Fixing Missing values ####
summary(df2)
#### Fixing Missing values ####
missing = df2[is.na(df2$global_active_power),]
head(missing)
head(df2)
df2[rowSums(is.na(df2)) > length(colnames(df2)),]
length(colnames(df2))
df2[rowSums(is.na(df2)) > 0,]
df2[rowSums(is.na(df2)) > 10,]
head(df2)
df2[rowSums(is.na(df2)) > length(colnames(df2))-1,]
df2[rowSums(is.na(df2)) > 11,]
df2[rowSums(is.na(df2)) > 10,]
df2[rowSums(is.na(df2)) > 9,]
head(df2)
summary(df2)
df2[rowSums(is.na(df2)) >= 10,]
df2[rowSums(is.na(df2)) >= length(colnames(df2))-1,]
head(df2)
df2[rowSums(is.na(df2)) >= 1 & rowSums(is.na(df2)) < length(colnames(df2))-1,]
df2[rowSums(is.na(df2)) >= 1 & rowSums(is.na(df2)) < length(colnames(df2))-1,] #Partial DC
head(missing)
df2[rowSums(is.na(df2)) >= 1 & rowSums(is.na(df2)) < length(colnames(df2))-1,] #Partial DC
head(df2)
install.packages("fpp2")
library(fpp2)
rm(list = ls())
y <- ts(c(123,39,78,52,110), start=2012)
y
head(y)
ts()
y
?autoplot
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
head(df2)
autoplot(df2[,"global_active_power"])
rm(list = ls())
y <- ts(c(123,39,78,52,110), start=2012)
y
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
total.ts     =  xts(df2$total_consump, df2$dateTime)
autoplot(total.ts[,"total_consump"])
head(df2)
df2 %>%
mutate(dateTime = ymd(dateTime))
df3 = df2[1:10,]
df3
ymd(df3$dateTime)
date(df3$dateTime)
df2 = df2 %>%
transmute(date = date(dateTime))
head(df2)
rm(list = ls())
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
df2 = df2 %>%
transmute(date = date(dateTime))
head(df2)
rm(list = ls())
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
df2 = df2 %>%
mutate(date = date(dateTime))
head(df2)
df2 = df2 %>%
mutate(date = date(dateTime)) %>%
select(-dateTime)
head(df2)
rm(list = ls())
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
df2 = df2 %>%
mutate(date = date(dateTime)) %>%
select(-dateTime)
total.ts     =  xts(df2$total_consump, df2$date)
autoplot(total.ts[,"total_consump"])
head(df2)
df2 = df2 %>%
mutate(date = date(dateTime)) %>%
select(-dateTime) %>%
group_by(date) %>%
summarise_all(mean)
rm(list = ls())
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
df2 = df2 %>%
mutate(date = date(dateTime)) %>%
select(-dateTime) %>%
group_by(date) %>%
summarise_all(mean)
head(df2)
total.ts     =  xts(df2$total_consump, df2$date)
autoplot(total.ts[,"total_consump"])
autoplot(total.ts)
plot.ts(total.ts)
autoplot(total.ts)
autoplot(kitchen.ts)
kitchen.ts   =  xts(df2$kitchen, df2$date)
laundry.ts   =  xts(df2$laundry_room, df2$date)
heater.ts    =  xts(df2$heater_conditioner, df2$date)
submeter.ts  =  xts(df2$total_submeter, df2$date)
total.ts     =  xts(df2$total_consump, df2$date)
rest.ts      =  xts(df2$total_rest, df2$date)
autoplot(kitchen.ts)
autoplot(laundry.ts)
autoplot(heater.ts)
autoplot(submeter.ts)
autoplot(total.ts)
autoplot(rest.ts)
head(df2)
df3 = df2[1:10,]
df3
df3 %>%
group_by(year(date), month(date)) %>%
summarise_all(mean)
df3 = df2 %>%
group_by(year(date), month(date)) %>%
summarise_all(mean)
head(df3)
rm(list = ls())
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
head(df2)
rm(list = ls())
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
df2 = df2 %>%
mutate(xdate = date(dateTime)) %>%
select(-dateTime) %>%
group_by(year(xdate), month(xdate)) %>%
summarise_all(mean)
head(df2)
48/12
rm(list = ls())
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
df2 = df2 %>%
mutate(xdate = date(dateTime)) %>%
select(-dateTime) %>%
group_by(year(xdate), month(xdate)) %>%
summarise_all(mean)
head(df2)
kitchen.ts   =  xts(df2$kitchen, df2$date)
laundry.ts   =  xts(df2$laundry_room, df2$date)
heater.ts    =  xts(df2$heater_conditioner, df2$date)
submeter.ts  =  xts(df2$total_submeter, df2$date)
total.ts     =  xts(df2$total_consump, df2$date)
rest.ts      =  xts(df2$total_rest, df2$date)
autoplot(kitchen.ts)
autoplot(laundry.ts)
autoplot(heater.ts)
autoplot(submeter.ts)
autoplot(total.ts)
autoplot(rest.ts)
kitchen.ts   =  xts(df2$kitchen, df2$date)
head(df2)
rm(list = ls())
setwd("C:/Users/David/Google Drive/Github/task-3-1-define-a-data-science-process-dgibert17")
load(file = "DFenergy_featEng.Rdata")
head(df2)
